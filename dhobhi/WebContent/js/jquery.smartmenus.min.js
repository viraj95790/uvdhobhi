!function (t) { function e(e) { var a = ".smartmenus_mouse"; if (h || e) h && e && (t(document).unbind(a), h = !1); else { var u = !0, l = null; t(document).bind(o([["mousemove", function (e) { var i = { x: e.pageX, y: e.pageY, timeStamp: (new Date).getTime() }; if (l) { var s = Math.abs(l.x - i.x), o = Math.abs(l.y - i.y); if ((s > 0 || o > 0) && 2 >= s && 2 >= o && i.timeStamp - l.timeStamp <= 300 && (r = !0, u)) { var a = t(e.target).closest("a"); a.is("a") && t.each(n, function () { return t.contains(this.$root[0], a[0]) ? (this.itemEnter({ currentTarget: a[0] }), !1) : void 0 }), u = !1 } } l = i }], [s() ? "touchstart" : "pointerover pointermove pointerout MSPointerOver MSPointerMove MSPointerOut", function (t) { i(t.originalEvent) && (r = !1) }]], a)), h = !0 } } function i(t) { return !/^(4|mouse)$/.test(t.pointerType) } function s() { return "ontouchstart" in window } function o(e, i) { i || (i = ""); var s = {}; return t.each(e, function (t, e) { s[e[0].split(" ").join(i + " ") + i] = e[1] }), s } var n = [], a = !!window.createPopup, r = !1, h = !1; t.SmartMenus = function (e, i) { this.$root = t(e), this.opts = i, this.rootId = "", this.$subArrow = null, this.subMenus = [], this.activatedItems = [], this.visibleSubMenus = [], this.showTimeout = 0, this.hideTimeout = 0, this.scrollTimeout = 0, this.clickActivated = !1, this.zIndexInc = 0, this.$firstLink = null, this.$firstSub = null, this.disabled = !1, this.$disableOverlay = null, this.isTouchScrolling = !1, this.init() }, t.extend(t.SmartMenus, { hideAll: function () { t.each(n, function () { this.menuHideAll() }) }, destroy: function () { for (; n.length;) n[0].destroy(); e(!0) }, prototype: { init: function (i) { var s = this; if (!i) { n.push(this), this.rootId = ((new Date).getTime() + Math.random() + "").replace(/\D/g, ""), this.$root.hasClass("sm-rtl") && (this.opts.rightToLeftSubMenus = !0); var a = ".smartmenus"; this.$root.data("smartmenus", this).attr("data-smartmenus-id", this.rootId).dataSM("level", 1).bind(o([["mouseover focusin", t.proxy(this.rootOver, this)], ["mouseout focusout", t.proxy(this.rootOut, this)]], a)).delegate("a", o([["mouseenter", t.proxy(this.itemEnter, this)], ["mouseleave", t.proxy(this.itemLeave, this)], ["mousedown", t.proxy(this.itemDown, this)], ["focus", t.proxy(this.itemFocus, this)], ["blur", t.proxy(this.itemBlur, this)], ["click", t.proxy(this.itemClick, this)], ["touchend", t.proxy(this.itemTouchEnd, this)]], a)), a += this.rootId, this.opts.hideOnClick && t(document).bind(o([["touchstart", t.proxy(this.docTouchStart, this)], ["touchmove", t.proxy(this.docTouchMove, this)], ["touchend", t.proxy(this.docTouchEnd, this)], ["click", t.proxy(this.docClick, this)]], a)), t(window).bind(o([["resize orientationchange", t.proxy(this.winResize, this)]], a)), e() } if (this.$firstSub = this.$root.find("ul").each(function () { s.menuInit(t(this)) }).eq(0), this.$firstLink = this.$root.find("a").eq(0), this.opts.markCurrentItem) { var r = /(index|default)\.[^#\?\/]*/i, h = /#.*/, u = window.location.href.replace(r, ""), l = u.replace(h, ""); this.$root.find("a").each(function () { var e = this.href.replace(r, ""), i = t(this); (e == u || e == l) && (i.addClass("current"), s.opts.markCurrentTree && i.parent().parentsUntil("[data-smartmenus-id]", "li").children("a").addClass("current")) }) } }, destroy: function () { this.menuHideAll(); var e = ".smartmenus"; this.$root.removeData("smartmenus").removeAttr("data-smartmenus-id").removeDataSM("level").unbind(e).undelegate(e), e += this.rootId, t(document).unbind(e), t(window).unbind(e), this.opts.subIndicators && (this.$subArrow = null); var i = this; t.each(this.subMenus, function () { this.hasClass("mega-menu") && this.find("ul").removeDataSM("in-mega"), this.dataSM("shown-before") && (i.opts.subMenusMinWidth || i.opts.subMenusMaxWidth, this.dataSM("scroll-arrows") && this.dataSM("scroll-arrows").remove(), this.css({ zIndex: "", top: "", left: "", marginLeft: "", marginTop: "", display: "" })), i.opts.subIndicators && this.dataSM("parent-a").removeClass("has-submenu").children("span.sub-arrow").remove(), this.removeDataSM("shown-before").removeDataSM("ie-shim").removeDataSM("scroll-arrows").removeDataSM("parent-a").removeDataSM("level").removeDataSM("beforefirstshowfired").parent().removeDataSM("sub") }), this.opts.markCurrentItem && this.$root.find("a.current").removeClass("current"), this.$root = null, this.$firstLink = null, this.$firstSub = null, this.$disableOverlay && (this.$disableOverlay.remove(), this.$disableOverlay = null), n.splice(t.inArray(this, n), 1) }, disable: function (e) { if (!this.disabled) { if (this.menuHideAll(), !e && !this.opts.isPopup && this.$root.is(":visible")) { var i = this.$root.offset(); this.$disableOverlay = t('<div class="sm-jquery-disable-overlay"/>').css({ position: "absolute", top: i.top, left: i.left, width: this.$root.outerWidth(), height: this.$root.outerHeight(), zIndex: this.getStartZIndex(!0), opacity: 0 }).appendTo(document.body) } this.disabled = !0 } }, docClick: function (e) { return this.isTouchScrolling ? void (this.isTouchScrolling = !1) : void ((this.visibleSubMenus.length && !t.contains(this.$root[0], e.target) || t(e.target).is("a")) && this.menuHideAll()) }, docTouchEnd: function () { if (this.lastTouch) { if (!(!this.visibleSubMenus.length || void 0 !== this.lastTouch.x2 && this.lastTouch.x1 != this.lastTouch.x2 || void 0 !== this.lastTouch.y2 && this.lastTouch.y1 != this.lastTouch.y2 || this.lastTouch.target && t.contains(this.$root[0], this.lastTouch.target))) { this.hideTimeout && (clearTimeout(this.hideTimeout), this.hideTimeout = 0); var e = this; this.hideTimeout = setTimeout(function () { e.menuHideAll() }, 350) } this.lastTouch = null } }, docTouchMove: function (t) { if (this.lastTouch) { var e = t.originalEvent.touches[0]; this.lastTouch.x2 = e.pageX, this.lastTouch.y2 = e.pageY } }, docTouchStart: function (t) { var e = t.originalEvent.touches[0]; this.lastTouch = { x1: e.pageX, y1: e.pageY, target: e.target } }, enable: function () { this.disabled && (this.$disableOverlay && (this.$disableOverlay.remove(), this.$disableOverlay = null), this.disabled = !1) }, getClosestMenu: function (e) { for (var i = t(e).closest("ul") ; i.dataSM("in-mega") ;) i = i.parent().closest("ul"); return i[0] || null }, getHeight: function (t) { return this.getOffset(t, !0) }, getOffset: function (t, e) { var i; "none" == t.css("display") && (i = { position: t[0].style.position, visibility: t[0].style.visibility }, t.css({ position: "absolute", visibility: "hidden" }).show()); var s = t[0].getBoundingClientRect && t[0].getBoundingClientRect(), o = s && (e ? s.height || s.bottom - s.top : s.width || s.right - s.left); return o || 0 === o || (o = e ? t[0].offsetHeight : t[0].offsetWidth), i && t.hide().css(i), o }, getStartZIndex: function (t) { var e = parseInt(this[t ? "$root" : "$firstSub"].css("z-index")); return !t && isNaN(e) && (e = parseInt(this.$root.css("z-index"))), isNaN(e) ? 1 : e }, getTouchPoint: function (t) { return t.touches && t.touches[0] || t.changedTouches && t.changedTouches[0] || t }, getViewport: function (t) { var e = t ? "Height" : "Width", i = document.documentElement["client" + e], s = window["inner" + e]; return s && (i = Math.min(i, s)), i }, getViewportHeight: function () { return this.getViewport(!0) }, getViewportWidth: function () { return this.getViewport() }, getWidth: function (t) { return this.getOffset(t) }, handleEvents: function () { return !this.disabled && this.isCSSOn() }, handleItemEvents: function (t) { return this.handleEvents() && !this.isLinkInMegaMenu(t) }, isCollapsible: function () { return "static" == this.$firstSub.css("position") }, isCSSOn: function () { return "block" == this.$firstLink.css("display") }, isFixed: function () { var e = "fixed" == this.$root.css("position"); return e || this.$root.parentsUntil("body").each(function () { return "fixed" == t(this).css("position") ? (e = !0, !1) : void 0 }), e }, isLinkInMegaMenu: function (t) { return !t.parent().parent().dataSM("level") }, isTouchMode: function () { return !r || this.isCollapsible() }, itemActivate: function (e) { var i = e.parent(), s = i.parent(), o = s.dataSM("level"); if (o > 1 && (!this.activatedItems[o - 2] || this.activatedItems[o - 2][0] != s.dataSM("parent-a")[0])) { var n = this; t(s.parentsUntil("[data-smartmenus-id]", "ul").get().reverse()).add(s).each(function () { n.itemActivate(t(this).dataSM("parent-a")) }) } if (this.visibleSubMenus.length > o && this.menuHideSubMenus(this.activatedItems[o - 1] && this.activatedItems[o - 1][0] == e[0] ? o : o - 1), this.activatedItems[o - 1] = e, this.visibleSubMenus[o - 1] = s, this.$root.triggerHandler("activate.smapi", e[0]) !== !1) { var a = i.dataSM("sub"); a && (this.isTouchMode() || !this.opts.showOnClick || this.clickActivated) && this.menuShow(a) } }, itemBlur: function (e) { var i = t(e.currentTarget); this.handleItemEvents(i) && this.$root.triggerHandler("blur.smapi", i[0]) }, itemClick: function (e) { if (this.isTouchScrolling) return this.isTouchScrolling = !1, e.stopPropagation(), !1; var i = t(e.currentTarget); if (this.handleItemEvents(i)) { if (i.removeDataSM("mousedown"), this.$root.triggerHandler("click.smapi", i[0]) === !1) return !1; var s = i.parent().dataSM("sub"); if (this.isTouchMode()) { if (i.dataSM("href") && i.attr("href", i.dataSM("href")).removeDataSM("href"), s && (!s.dataSM("shown-before") || !s.is(":visible")) && (this.itemActivate(i), s.is(":visible"))) return !1 } else if (this.opts.showOnClick && 1 == i.parent().parent().dataSM("level") && s) return this.clickActivated = !0, this.menuShow(s), !1; return i.hasClass("disabled") ? !1 : this.$root.triggerHandler("select.smapi", i[0]) === !1 ? !1 : void 0 } }, itemDown: function (e) { var i = t(e.currentTarget); this.handleItemEvents(i) && i.dataSM("mousedown", !0) }, itemEnter: function (e) { var i = t(e.currentTarget); if (this.handleItemEvents(i)) { if (!this.isTouchMode()) { this.showTimeout && (clearTimeout(this.showTimeout), this.showTimeout = 0); var s = this; this.showTimeout = setTimeout(function () { s.itemActivate(i) }, this.opts.showOnClick && 1 == i.parent().parent().dataSM("level") ? 1 : this.opts.showTimeout) } this.$root.triggerHandler("mouseenter.smapi", i[0]) } }, itemFocus: function (e) { var i = t(e.currentTarget); this.handleItemEvents(i) && (this.isTouchMode() && i.dataSM("mousedown") || this.activatedItems.length && this.activatedItems[this.activatedItems.length - 1][0] == i[0] || this.itemActivate(i), this.$root.triggerHandler("focus.smapi", i[0])) }, itemLeave: function (e) { var i = t(e.currentTarget); this.handleItemEvents(i) && (this.isTouchMode() || (i[0].blur && i[0].blur(), this.showTimeout && (clearTimeout(this.showTimeout), this.showTimeout = 0)), i.removeDataSM("mousedown"), this.$root.triggerHandler("mouseleave.smapi", i[0])) }, itemTouchEnd: function (e) { var i = t(e.currentTarget); if (this.handleItemEvents(i)) { var s = i.parent().dataSM("sub"); "#" === i.attr("href").charAt(0) || !s || s.dataSM("shown-before") && s.is(":visible") || (i.dataSM("href", i.attr("href")), i.attr("href", "#")) } }, menuFixLayout: function (t) { t.dataSM("shown-before") || t.hide().dataSM("shown-before", !0) }, menuHide: function (t) { if ("undefined" != typeof t && this.$root.triggerHandler("beforehide.smapi", t[0]) !== !1 && t.hasClass("dropdown-menu") && (t.stop(!0, !0), t.is(":visible"))) { var e = function () { t.css("z-index", "") }; this.isCollapsible() ? this.opts.collapsibleHideFunction ? this.opts.collapsibleHideFunction.call(this, t, e) : t.hide(this.opts.collapsibleHideDuration, e) : this.opts.hideFunction ? this.opts.hideFunction.call(this, t, e) : t.hide(this.opts.hideDuration, e), t.dataSM("ie-shim") && t.dataSM("ie-shim").remove(), t.dataSM("scroll") && (this.menuScrollStop(t), t.css({ "touch-action": "", "-ms-touch-action": "" }).unbind(".smartmenus_scroll").removeDataSM("scroll").dataSM("scroll-arrows").hide()), t.dataSM("parent-a").removeClass("highlighted"); var i = t.dataSM("level"); this.activatedItems.splice(i - 1, 1), this.visibleSubMenus.splice(i - 1, 1), this.$root.triggerHandler("hide.smapi", t[0]) } }, menuHideAll: function () { this.showTimeout && (clearTimeout(this.showTimeout), this.showTimeout = 0), this.menuHideSubMenus(), this.opts.isPopup && (this.$root.stop(!0, !0), this.$root.is(":visible") && (this.opts.hideFunction ? this.opts.hideFunction.call(this, this.$root) : this.$root.hide(this.opts.hideDuration), this.$root.dataSM("ie-shim") && this.$root.dataSM("ie-shim").remove())), this.activatedItems = [], this.visibleSubMenus = [], this.clickActivated = !1, this.zIndexInc = 0 }, menuHideSubMenus: function (t) { t || (t = 0); for (var e = this.visibleSubMenus.length - 1; e > t; e--) this.menuHide(this.visibleSubMenus[e]) }, menuIframeShim: function (e) { a && this.opts.overlapControlsInIE && !e.dataSM("ie-shim") && e.dataSM("ie-shim", t("<iframe/>").attr({ src: "javascript:0", tabindex: -9 }).css({ position: "absolute", top: "auto", left: "0", opacity: 0, border: "0" })) }, menuInit: function (t) { if (!t.dataSM("in-mega")) { this.subMenus.push(t), t.hasClass("mega-menu") && t.find("ul").dataSM("in-mega", !0); for (var e = 2, i = t[0]; (i = i.parentNode.parentNode) != this.$root[0];) e++; t.dataSM("parent-a", t.prevAll("a").eq(-1)).dataSM("level", e).parent().dataSM("sub", t) } }, menuPosition: function (e) { var i, n, a = e.dataSM("parent-a"), r = e.parent().parent(), h = e.dataSM("level"), u = this.getWidth(e), l = this.getHeight(e), c = a.offset(), d = c.left, m = c.top, p = this.getWidth(a), f = this.getHeight(a), v = t(window), S = v.scrollLeft(), b = v.scrollTop(), M = this.getViewportWidth(), g = this.getViewportHeight(), w = r.hasClass("sm") && !r.hasClass("sm-vertical"), T = 2 == h ? this.opts.mainMenuSubOffsetX : this.opts.subMenusSubOffsetX, $ = 2 == h ? this.opts.mainMenuSubOffsetY : this.opts.subMenusSubOffsetY; if (w ? (i = this.opts.rightToLeftSubMenus ? p - u - T : T, n = this.opts.bottomToTopSubMenus ? -l - $ : f + $) : (i = this.opts.rightToLeftSubMenus ? T - u : p - T, n = this.opts.bottomToTopSubMenus ? f - $ - l : $), this.opts.keepInViewport && !this.isCollapsible()) { var y = d + i, I = m + n; if (this.opts.rightToLeftSubMenus && S > y ? i = w ? S - y + i : p - T : !this.opts.rightToLeftSubMenus && y + u > S + M && (i = w ? S + M - u - y + i : T - u), w || (g > l && I + l > b + g ? n += b + g - l - I : (l >= g || b > I) && (n += b - I)), w && (I + l > b + g + .49 || b > I) || !w && l > g + .49) { var x = this; e.dataSM("scroll-arrows") || e.dataSM("scroll-arrows", t([t('<span class="scroll-up"><span class="scroll-up-arrow"></span></span>')[0], t('<span class="scroll-down"><span class="scroll-down-arrow"></span></span>')[0]]).bind({ mouseenter: function () { e.dataSM("scroll").up = t(this).hasClass("scroll-up"), x.menuScroll(e) }, mouseleave: function (t) { x.menuScrollStop(e), x.menuScrollOut(e, t) }, "mousewheel DOMMouseScroll": function (t) { t.preventDefault() } }).insertAfter(e)); var C = ".smartmenus_scroll"; e.dataSM("scroll", { step: 1, itemH: f, subH: l, arrowDownH: this.getHeight(e.dataSM("scroll-arrows").eq(1)) }).bind(o([["mouseover", function (t) { x.menuScrollOver(e, t) }], ["mouseout", function (t) { x.menuScrollOut(e, t) }], ["mousewheel DOMMouseScroll", function (t) { x.menuScrollMousewheel(e, t) }]], C)).dataSM("scroll-arrows").css({ top: "auto", left: "0", marginLeft: i + (parseInt(e.css("border-left-width")) || 0), width: u - (parseInt(e.css("border-left-width")) || 0) - (parseInt(e.css("border-right-width")) || 0), zIndex: e.css("z-index") }).eq(w && this.opts.bottomToTopSubMenus ? 0 : 1).show(), this.isFixed() && e.css({ "touch-action": "none", "-ms-touch-action": "none" }).bind(o([[s() ? "touchstart touchmove touchend" : "pointerdown pointermove pointerup MSPointerDown MSPointerMove MSPointerUp", function (t) { x.menuScrollTouch(e, t) }]], C)) } } e.css({}), this.menuIframeShim(e), e.dataSM("ie-shim") && e.dataSM("ie-shim").css({ zIndex: e.css("z-index"), width: u, height: l, marginLeft: i, marginTop: n - f }) }, menuScroll: function (t, e, i) { var s, o = t.dataSM("scroll"), n = t.dataSM("scroll-arrows"), a = parseFloat(t.css("margin-top")), h = o.up ? o.upEnd : o.downEnd; if (!e && o.velocity) { if (o.velocity *= .9, s = o.velocity, .5 > s) return void this.menuScrollStop(t) } else s = i || (e || !this.opts.scrollAccelerate ? this.opts.scrollStep : Math.floor(o.step)); var u = t.dataSM("level"); this.visibleSubMenus.length > u && this.menuHideSubMenus(u - 1); var l = o.up && a >= h || !o.up && h >= a ? a : Math.abs(h - a) > s ? a + (o.up ? s : -s) : h; if (t.add(t.dataSM("ie-shim")).css("margin-top", l), r && (o.up && l > o.downEnd || !o.up && l < o.upEnd) && n.eq(o.up ? 1 : 0).show(), l == h) r && n.eq(o.up ? 0 : 1).hide(), this.menuScrollStop(t); else if (!e) { this.opts.scrollAccelerate && o.step < this.opts.scrollStep && (o.step += .5); var c = this; this.scrollTimeout = setTimeout(function () { c.menuScroll(t) }, this.opts.scrollInterval) } }, menuScrollMousewheel: function (t, e) { if (this.getClosestMenu(e.target) == t[0]) { e = e.originalEvent; var i = (e.wheelDelta || -e.detail) > 0; t.dataSM("scroll-arrows").eq(i ? 0 : 1).is(":visible") && (t.dataSM("scroll").up = i, this.menuScroll(t, !0)) } e.preventDefault() }, menuScrollOut: function (e, i) { r && (/^scroll-(up|down)/.test((i.relatedTarget || "").className) || (e[0] == i.relatedTarget || t.contains(e[0], i.relatedTarget)) && this.getClosestMenu(i.relatedTarget) == e[0] || e.dataSM("scroll-arrows").css("visibility", "hidden")) }, menuScrollOver: function (t, e) { if (r && !/^scroll-(up|down)/.test(e.target.className) && this.getClosestMenu(e.target) == t[0]) { this.menuScrollRefreshData(t); var i = t.dataSM("scroll"); t.dataSM("scroll-arrows").eq(0).css("margin-top", i.upEnd).end().eq(1).css("margin-top", i.downEnd + i.subH - i.arrowDownH).end().css("visibility", "visible") } }, menuScrollRefreshData: function (e) { var i = e.dataSM("scroll"), s = t(window), o = s.scrollTop() - e.dataSM("parent-a").offset().top - i.itemH; t.extend(i, { upEnd: o, downEnd: o + this.getViewportHeight() - i.subH }) }, menuScrollStop: function (e) { return this.scrollTimeout ? (clearTimeout(this.scrollTimeout), this.scrollTimeout = 0, t.extend(e.dataSM("scroll"), { step: 1, velocity: 0 }), !0) : void 0 }, menuScrollTouch: function (e, s) { if (s = s.originalEvent, i(s)) { var o = this.getTouchPoint(s); if (this.getClosestMenu(o.target) == e[0]) { var n = e.dataSM("scroll"); if (/(start|down)$/i.test(s.type)) this.menuScrollStop(e) ? (s.preventDefault(), this.isTouchScrolling = !0) : this.isTouchScrolling = !1, this.menuScrollRefreshData(e), t.extend(n, { touchY: o.pageY, touchTimestamp: s.timeStamp, velocity: 0 }); else if (/move$/i.test(s.type)) { var a = n.touchY; void 0 !== a && a != o.pageY && (this.isTouchScrolling = !0, t.extend(n, { up: a < o.pageY, touchY: o.pageY, touchTimestamp: s.timeStamp, velocity: n.velocity + .5 * Math.abs(o.pageY - a) }), this.menuScroll(e, !0, Math.abs(n.touchY - a))), s.preventDefault() } else void 0 !== n.touchY && (s.timeStamp - n.touchTimestamp < 120 && n.velocity > 0 && (n.velocity *= .5, this.menuScrollStop(e), this.menuScroll(e), s.preventDefault()), delete n.touchY) } } }, menuShow: function (t) { if ((t.dataSM("beforefirstshowfired") || (t.dataSM("beforefirstshowfired", !0), this.$root.triggerHandler("beforefirstshow.smapi", t[0]) !== !1)) && this.$root.triggerHandler("beforeshow.smapi", t[0]) !== !1 && (this.menuFixLayout(t), t.stop(!0, !0), !t.is(":visible"))) { if (t.css("z-index", this.zIndexInc = (this.zIndexInc || this.getStartZIndex()) + 1), (this.opts.keepHighlighted || this.isCollapsible()) && (t.dataSM("parent-a").addClass("highlighted"), t.parent().addClass("open")), t.parent().parent().hasClass("navbar-nav") || t.parent().addClass("open"), (this.opts.subMenusMinWidth || this.opts.subMenusMaxWidth) && this.opts.subMenusMaxWidth) { { this.getWidth(t) } t.css("max-width", this.opts.subMenusMaxWidth) } this.menuPosition(t), t.dataSM("ie-shim") && t.dataSM("ie-shim").insertBefore(t); var e = function () { t.css("overflow", "") }; this.isCollapsible() ? this.opts.collapsibleShowFunction ? this.opts.collapsibleShowFunction.call(this, t, e) : t.show(this.opts.collapsibleShowDuration, e) : this.opts.showFunction ? this.opts.showFunction.call(this, t, e) : t.show(this.opts.showDuration, e), this.visibleSubMenus[t.dataSM("level") - 1] = t, this.$root.triggerHandler("show.smapi", t[0]) } }, popupHide: function (t) { this.hideTimeout && (clearTimeout(this.hideTimeout), this.hideTimeout = 0); var e = this; this.hideTimeout = setTimeout(function () { e.menuHideAll() }, t ? 1 : this.opts.hideTimeout) }, popupShow: function (t, e) { if (!this.opts.isPopup) return void alert('SmartMenus jQuery Error:\n\nIf you want to show this menu via the "popupShow" method, set the isPopup:true option.'); if (this.hideTimeout && (clearTimeout(this.hideTimeout), this.hideTimeout = 0), this.menuFixLayout(this.$root), this.$root.stop(!0, !0), !this.$root.is(":visible")) { this.$root.css({ left: t, top: e }), this.menuIframeShim(this.$root), this.$root.dataSM("ie-shim") && this.$root.dataSM("ie-shim").css({ zIndex: this.$root.css("z-index"), width: this.getWidth(this.$root), height: this.getHeight(this.$root), left: t, top: e }).insertBefore(this.$root); var i = this, s = function () { i.$root.css("overflow", "") }; this.opts.showFunction ? this.opts.showFunction.call(this, this.$root, s) : this.$root.show(this.opts.showDuration, s), this.visibleSubMenus[0] = this.$root } }, refresh: function () { this.menuHideAll(), this.$root.find("ul").each(function () { var e = t(this); e.dataSM("scroll-arrows") && e.dataSM("scroll-arrows").remove() }).removeDataSM("in-mega").removeDataSM("shown-before").removeDataSM("ie-shim").removeDataSM("scroll-arrows").removeDataSM("parent-a").removeDataSM("level").removeDataSM("beforefirstshowfired"), this.$root.find("a.has-submenu").removeClass("has-submenu").parent().removeDataSM("sub"), this.opts.subIndicators, this.opts.markCurrentItem && this.$root.find("a.current").removeClass("current"), this.subMenus = [], this.init(!0) }, rootOut: function (t) { if (this.handleEvents() && !this.isTouchMode() && t.target != this.$root[0] && (this.hideTimeout && (clearTimeout(this.hideTimeout), this.hideTimeout = 0), !this.opts.showOnClick || !this.opts.hideOnClick)) { var e = this; this.hideTimeout = setTimeout(function () { e.menuHideAll() }, this.opts.hideTimeout) } }, rootOver: function (t) { this.handleEvents() && !this.isTouchMode() && t.target != this.$root[0] && this.hideTimeout && (clearTimeout(this.hideTimeout), this.hideTimeout = 0) }, winResize: function (t) { if (this.handleEvents()) this.isCollapsible() || "onorientationchange" in window && "orientationchange" != t.type || (this.activatedItems.length && this.activatedItems[this.activatedItems.length - 1][0].blur(), this.menuHideAll()); else if (this.$disableOverlay) { var e = this.$root.offset(); this.$disableOverlay.css({ top: e.top, left: e.left, width: this.$root.outerWidth(), height: this.$root.outerHeight() }) } } } }), t.fn.dataSM = function (t, e) { return e ? this.data(t + "_smartmenus", e) : this.data(t + "_smartmenus") }, t.fn.removeDataSM = function (t) { return this.removeData(t + "_smartmenus") }, t.fn.smartmenus = function (e) { if ("string" == typeof e) { var i = arguments, s = e; return Array.prototype.shift.call(i), this.each(function () { var e = t(this).data("smartmenus"); e && e[s] && e[s].apply(e, i) }) } var o = t.extend({}, t.fn.smartmenus.defaults, e); return this.each(function () { new t.SmartMenus(this, o) }) }, t.fn.smartmenus.defaults = { isPopup: !1, mainMenuSubOffsetX: 0, mainMenuSubOffsetY: 0, subMenusSubOffsetX: 0, subMenusSubOffsetY: 0, subMenusMinWidth: "15em", subMenusMaxWidth: "100%", subIndicators: !1, subIndicatorsPos: "prepend", subIndicatorsText: "+", scrollStep: 30, scrollInterval: 30, scrollAccelerate: !0, showTimeout: 0, hideTimeout: 200, showDuration: 0, showFunction: null, hideDuration: 0, hideFunction: function (t, e) { t.parent().parent().hasClass("navbar-nav") ? t.fadeOut(250, e) : t.fadeOut(0, e) }, collapsibleShowDuration: 0, collapsibleShowFunction: function (t, e) { t.slideDown(200, e) }, collapsibleHideDuration: 0, collapsibleHideFunction: function (t, e) { t.slideUp(200, e) }, showOnClick: !1, hideOnClick: !0, keepInViewport: !0, keepHighlighted: !1, markCurrentItem: !1, markCurrentTree: !0, rightToLeftSubMenus: !1, bottomToTopSubMenus: !1, overlapControlsInIE: !0 } }(jQuery);

/* Bootstrap Addon */
!function (a) { a(function () { a("ul.navbar-nav").each(function () { var s = a(this); s.addClass("sm").smartmenus({ subMenusSubOffsetX: 2, subMenusSubOffsetY: -6, subIndicatorsPos: "append", subIndicatorsText: "...", collapsibleShowFunction: null, collapsibleHideFunction: null, rightToLeftSubMenus: s.hasClass("navbar-right"), bottomToTopSubMenus: s.closest(".navbar").hasClass("navbar-fixed-bottom") }).find("a.current").parent().addClass("active") }).bind({ "show.smapi": function (s, n) { var t = a(n), e = t.dataSM("scroll-arrows"), i = a(this).data("smartmenus"); e && e.css("background-color", a(document.body).css("background-color")), t.parent().parent().hasClass("navbar-nav") && t.parent().addClass("open" + (i.isCollapsible() ? " collapsible" : "")) }, "hide.smapi": function (s, n) { a(n).parent().removeClass("open collapsible") }, "click.smapi": function (s, n) { var t = a(this).data("smartmenus"); if (t.isCollapsible()) { var e = a(n), i = e.parent().dataSM("sub"); if (i && i.dataSM("shown-before") && i.is(":visible")) return t.itemActivate(e), t.menuHide(i), !1 } } }) }), a.SmartMenus.prototype.isCollapsible = function () { return "left" != this.$firstLink.parent().css("float") } }(jQuery);